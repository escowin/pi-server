# WireGuard Server Configuration Template
# File: /etc/wireguard/wg0.conf
# 
# This template provides a complete WireGuard server configuration
# for secure remote access to your Raspberry Pi server.
#
# Setup Instructions:
# 1. Generate server keys: wg genkey | tee server_private_key | wg pubkey | tee server_public_key
# 2. Replace [SERVER_PRIVATE_KEY] with the content from server_private_key file
# 3. Add client peers as needed (see client configuration template)
# 4. Enable IP forwarding: echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf
# 5. Configure firewall: sudo ufw allow 51820/udp
# 6. Start service: sudo systemctl enable wg-quick@wg0 && sudo systemctl start wg-quick@wg0

[Interface]
# Server private key (replace with actual private key)
PrivateKey = [SERVER_PRIVATE_KEY]

# VPN network address for the server
Address = 10.0.0.1/24

# Port WireGuard will listen on
ListenPort = 51820

# Enable IP forwarding and NAT for client internet access
PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

# Client peer configuration (add multiple [Peer] sections for multiple clients)
[Peer]
# Client public key (replace with actual client public key)
PublicKey = [CLIENT_PUBLIC_KEY]

# Allowed IPs for this client (specific client IP)
AllowedIPs = 10.0.0.2/32

# Optional: Preshared key for additional security
# PresharedKey = [PRESHARED_KEY]

# Additional client example:
# [Peer]
# PublicKey = [CLIENT2_PUBLIC_KEY]
# AllowedIPs = 10.0.0.3/32
