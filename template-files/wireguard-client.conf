# WireGuard Client Configuration Template
# File: pi-vpn.conf (or any name.conf)
# 
# This template provides a complete WireGuard client configuration
# for connecting to your Raspberry Pi server from remote locations.
#
# Setup Instructions:
# 1. Generate client keys: wg genkey | tee client_private_key | wg pubkey | tee client_public_key
# 2. Replace [CLIENT_PRIVATE_KEY] with the content from client_private_key file
# 3. Replace [SERVER_PUBLIC_KEY] with the server's public key
# 4. Replace [YOUR_DOMAIN_OR_IP] with your DuckDNS domain or public IP
# 5. Import this config into WireGuard client application
# 6. Connect to establish VPN tunnel

[Interface]
# Client private key (replace with actual private key)
PrivateKey = [CLIENT_PRIVATE_KEY]

# VPN network address for the client
Address = 10.0.0.2/24

# DNS servers (use Pi's VPN IP or public DNS)
DNS = 10.0.0.1, 8.8.8.8

# Optional: MTU adjustment for better performance
# PostUp = ip link set mtu 1420 dev %i

[Peer]
# Server public key (replace with actual server public key)
PublicKey = [SERVER_PUBLIC_KEY]

# Server endpoint (replace with your DuckDNS domain or public IP)
Endpoint = [YOUR_DOMAIN_OR_IP]:51820

# Allowed IPs (what traffic to route through VPN)
# Option 1: Route only Pi network traffic
AllowedIPs = 10.0.0.0/24, 192.168.1.0/24

# Option 2: Route all traffic through VPN (uncomment to use)
# AllowedIPs = 0.0.0.0/0

# Keep connection alive (sends keepalive packets every 25 seconds)
PersistentKeepalive = 25

# Optional: Preshared key for additional security (must match server)
# PresharedKey = [PRESHARED_KEY]

# Example configurations for different use cases:
#
# For Git operations only (recommended):
# AllowedIPs = 10.0.0.0/24, 192.168.1.0/24
#
# For full internet routing:
# AllowedIPs = 0.0.0.0/0
#
# For specific services only:
# AllowedIPs = 10.0.0.0/24, 192.168.1.244/32
